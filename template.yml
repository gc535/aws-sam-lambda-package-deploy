AWSTemplateFormatVersion: "2010-09-09"
Description: Lambda Resource Stack
Transform: AWS::Serverless-2016-10-31

# Please DO NOT save any important secects in this template, as this file by default
# is not ignored when syncing with remote repo.
Parameters:
  DeployementStage:
    Type: String
    Default: Dev
  LambdaPackageName:
    Type: String
    Default: ./lambda/

Resources:

  # CORS preflight for API resource '/welcome'
  LambdaWelcomeOption:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs16.x
      Handler: src/welcome/options/options.handler
      CodeUri: !Ref LambdaPackageName
      Events:
        LambdaInvokeAPI:
          Type: Api
          Properties:
            Method: options
            Path: /welcome
            RestApiId:
              Ref: LambdaResourceApi


  LambdaWelcomeGet:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs16.x
      Handler: src/welcome/get/get.handler
      CodeUri: !Ref LambdaPackageName
      Environment:
        Variables:
          WELCOME_MSG: "Hello There!"
      Events:
        LambdaInvokeAPI:
          Type: Api
          Properties:
            Method: get
            Path: /welcome
            # RequestParameters: (eg. add request field if necessary)
            #   - method.request.header.AccessToken
            RestApiId:
              Ref: LambdaResourceApi
            # Auth: (eg. using a user pool authorizer as commented in API section)
            #     Authorizer: LambdaResourceApiUserPool  
      # Policies: (eg. adding IAM policy to this lambda for S3 access permisions)
      #   - S3CrudPolicy:
      #       BucketName: !Ref YourS3StorageResource

  LambdaWelcomePost:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs16.x
      Handler: src/welcome/post/post.handler
      CodeUri: !Ref LambdaPackageName
      Events:
        LambdaInvokeAPI:
          Type: Api
          Properties:
            Method: post
            Path: /welcome
            RestApiId:
              Ref: LambdaResourceApi

  LambdaWelcomePut:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs16.x
      Handler: src/welcome/put/put.handler
      CodeUri: !Ref LambdaPackageName
      Events:
        LambdaInvokeAPI:
          Type: Api
          Properties:
            Method: put
            Path: /welcome
            RestApiId:
              Ref: LambdaResourceApi

  LambdaWelcomeDelete:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs16.x
      Handler: src/welcome/delete/delete.handler
      CodeUri: !Ref LambdaPackageName
      Events:
        LambdaInvokeAPI:
          Type: Api
          Properties:
            Method: delete
            Path: /welcome
            RestApiId:
              Ref: LambdaResourceApi


#### define API gateway resource endpoints.

  LambdaResourceApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref DeployementStage
      MethodSettings:
        - ResourcePath: /*
          HttpMethod: "*"
          ThrottlingBurstLimit: 50
          ThrottlingRateLimit: 100
      # Auth:
      #   Authorizers: (eg. create a user pool authorizer for this API)
      #     LambdaResourceApiUserPoolAuth: 
      #       AuthType: COGNITO_USER_POOLS
      #       UserPoolArn: !GetAtt LambdaResourceApiUserPool.Arn 


